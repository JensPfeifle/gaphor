
For 0.9.0:
----------
 - extra margin around operations in ClassItem (workaround)

For 0.10.0 and later:
---------------------

 - Undo functionality
 - Load / save regression testing
   !!! Create some example diagrams,
 - translate afifne matrices to new format.

 - split DiagramItem in a stereotype support, SubjectSupport and some
   other support classes.

 - using stereotypes
 - components and stuff

 - lot's of tests are dependent on a decently initialized main window.
   There is no need for these actions to depend on a main window, they only
   need a gaphas.View instance.

 - Use actions only for action definitions. use Events for notification
   between actions.

 - namedelement.py: from NamedElement
 - items.tex: describe:
    - __uml__
    - __stereotype__
    - __fixed_stereotype__

Older (long term ;) todo items:
-------------------------------

- At this point we have three event systems:
   2. Actions - used for (pseudo) menu actions (artifical actions are triggered
                some times (e.g. to notify about changes in the Undo Manager)
                works with string based notifiers.
   3. Zope - fairly optimized, works with interfaces and objects for a
             change.

   Actions work fine, for menu actions. Gaphor specific and should work
   with the GTK+ menu manager classes.
   Zope classes are quite optimized. However, mainly provides the same
   functionality as Actions, but not as fine grained.

- Add meta data (such as text alignment) to the model file (add a meta:
  namespace?)
.
- Fix namespace relations between Lifeline and Interaction and Message and
  Interaction

- Allow to make Action objects, instead of defining classes.
  Should use meta-classes for registration too (define __abstract__ or\something to prevent registration).

- disable actions when editing.

- write really good test cases for undo functionality. Have some already.

- An option that shows the selected item (in the namespace view) in a diagram.

- Stereotype export and import function. Allow to export packages and import
  them into other models.

- How to figure out if a module exists without loading it?

- Exporting diagrams to UML XMI (work in progress),
  code, images (SVG/png), etc. - make a plugin!

- fix accelarators (HOW?), partially done, accelerators on items in popup menus
  does not work.
  Accelerators should be activated by the (Abstract)Window, should not depend
  on menu items. Intercept Window::key_pressed_event and let it handle
  popup menu actions.

- In some cases (like when editing attributes) Enter should be used to
  complete the edit action.

- Create a good algorithm for placement of lines and maybe nodes too.

- Use default GTK+ menu classes, in stead of the home-brew one.

- Use GTK+ 2.4 UIManager and ActionGroups (?):
  * Reconsider since GTK+ 2.8 bindings are fairly better than the 2.4 bindings
  . We have to keep the gaphor.misc.action module intact.
  . As far as I can see, cross action updates, are not supported.
  . Properties can be mapped in a straightforward way.
  . Should actions be split up: one for the main window, one group per
    diagram and one group per item type?
  . GtkUIManager looks useful, some structures in Gaphor may have to be
    reconsidered. What to do with AccelMaps for example. (I really have
    to read the tutorial some day ;-).
  . The current structure is simple and quite Pythonic. It should be this way.
  . Stuff like a recent-file box will be easier to create (I guess).
  Previous conclusion: keep using the gaphor.misc.action code

- Automatically draw relations when an item is DND-ed from the tree-view
  to the diagram.

- Copy/Paste for diagramitems
  - in order to make copy/paste work, the load/save functions should be
    generatlised to allow a subset to be saved/loaded (which is needed
    anyway for exporting/importing stereotype Profiles).
  - How many data should be saved? (e.g. we copy a diagram item, remove it
    (the underlaying UML element is removed) and the paste the copied item.
    The diagram should act as if we have placed a copy of the removed item
    on the canvas and make the uml element visible again.

- Undo/redo functionality

#- Stereotypes: check documentation page 581 (597 absolute). Fixed. An extra
   association has been created between Stereotype and Class, Interface and
   Package.

Diagram Items
=============
Gaphor does not need to support *all* diagram types, but at least some
functinality should be provided for those.

- Deployment diagram:
  . Node
  . Artifact
  . some relations
- Sequence diagram:
  . Life line
  . different message types
  . Interaction

UI
--
>I would like to see
> some logic to align diagrams like Visio does, it's probably hard to do
> correct though. Also Visio has a very nice feature for bending lines in
> 90 degree bends by holding down shift, something like that would be very
> nice in Gaphor

- Lineup selected elements vertically, horizontally in context menu

- I also intend to "merge" lines (as is often used for generalizations: a
  line with one arrow, which splits into two lines, one for each subclass)

- The text editing also needs a facelift.

