= Basic Classes of Diagram Items =

DiagramItem is a basic class for all items.

Attributes:
- subject: UML class
- popup_menu: item popup menu definition, i.e. rename, delete, add
  attribute, etc.

Methods:
- set_subject: assign UML class to an item

== Relationship Between DiagramItem Object and UML Class ==

There is one to one association between item and UML class in DiagramItem
class.

DiagramItem.subject attribute can be None as in case of LifetimeItem or
CommentLine items.

DiagramItem can also visualize more than one UML class, for example
DecisionNodeItem items can represent combined decsion and merge nodes or
ForkNodeItem items can represent fork and join nodes (see UML
specification).

== Items and Diacanvas ==
Diacanvas library supports different canvas objects

- canvas element
- canvas line

Because of differences between them, DiagramItem class cannot be directly
associated with canvas line or canvas element. Connection between diacanvas
classes and items is established by other abstract classes. These are:

- LineItem
    canvas line items like dependencies, association, flows, message, etc.

- ElementItem
    canvas element items with shape like class, component, lifeline,
    comment, activity nodes, etc.
            
- FeatureItem
    canvas element, which is part of an item; for example represents
    attributes and methods of classes 

= Named Items =

Named items represents these UML classes, which derive from NamedElement.
All named items are editable, so user can double click on an item and
change or enter name of UML object.

We have to distinguish between two kind of named elements. One is related
to canvas elements and second is related to canvas lines. For example, name
of UML object can be positioned inside or outside canvas element (class vs.
initial node), also name can be centered or on left/right side of canvas
element. In case of canvas line based items name can be near head, tail
or centre of a line and name can be put horizontaly or along line path.

== Canvas Element Named Items ==


== Canvas Line Named Items ==
Basic class for line-like items is LineItem class.

= Line Items =
== Line Handles ==
Line has at leas two handles. These handles are reffered as head (first
hanndle) and tail (second handle) of line.

When user puts an item on a diagram, then last handle can be moved to
desired point. The same applies to line items. User puts line on diagram,
head is set in mouse cursor point and tail is moved to desired point.

Head and tail concepts are also used in diacanvas in case of canvas line.
Head of line item is at the same end as head of canvas line. The same
applies for tail.

== Relationships ==
See also relationships.txt.

Relationships are implemented using Python descriptors. See Relationship,
DependencyRelationship and AssociationRelationship classes for examples.

= Stereotypes =
See also stereotypes.txt.

= Profiles =

== Gaphor Stereotypes ==

- name: UML class of an item derives from NamedElement; name
        should be shown on diagram
- nostereotype: item does not allow to edit stereotypes

== Diacanvas Stereotypes ==

- editable: item is editable


= Glossary =

- item:
    item put on diagram by user, i.e. ClassItem, AssociationItem;
    conforms to UML notation of UML metamodel classes

- UML class:
    class defined in UML metamodel
